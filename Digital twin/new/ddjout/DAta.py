'''
Date: 2022-04-24 16:06:02
LastEditors: ZSudoku
LastEditTime: 2022-04-24 17:00:48
FilePath: \Digital-twin\Digital twin\new\ddjout\DAta.py
'''
List=[ 31.84, 32.69, 34.55, 35.41, 37.29, 38.15, 40.02, 40.88, 42.78, 44.70, 46.58 ] #与从入点到终点反向 意义为时间
# 入库编码数量：39


LisupLoadTimeLis = [36, 52, 61, 120, 152, 170, 252, 300, 327, 432, 496, 532, 660, 740, 785, 936, 1032, 1086, 1260, 1372, 1435, 1632, 1760, 1832, 2052, 2196, 2277, 2520, 2680, 2770, 3036, 3212, 3311, 3600, 3792, 3900, 4212, 4248, 4332, 4420, 4464, 4472, 4537, 4572, 4644, 4720, 4872, 4916, 5148, 5160, 5222, 5283, 5392, 5452, 5472, 5549, 5754, 5792,
5844, 6007, 6180, 6264, 6308, 6616, 6657, 6732, 6768, 6852, 6984, 7054, 7100, 7152, 7164, 7252, 7392, 7400, 7499, 7596, 7668, 7840, 7992, 7992, 8053, 8132, 8162, 8319, 8364, 8472, 8524, 8777, 8784, 8860, 9078, 9252, 9288, 9296, 9372, 9427, 9504, 9684, 9780, 9824, 9832, 9912, 9932, 10080, 10188, 10269, 10276, 10512, 10520, 10762, 10812, 10823, 10884, 10932, 11089, 11152, 11294, 11304, 11540, 11547, 11772, 11848, 11976, 12197, 12288, 12324, 12408, 12460, 12540, 12594, 12720, 12948, 12992, 13039, 13224, 13532, 13548, 13572, 13624, 13724, 13872, 13920, 14068, 14073, 14312, 14340, 14604, 14662, 14723, 14808, 14832, 14944, 14989, 15194, 15324, 15332, 15447,
15748, 15768, 15888, 16097, 16252, 16494, 16500, 16784, 16939, 17160, 17364, 17432, 17868, 17973, 17992, 18562, 18624, 18668, 19199, 19392, 19428, 19884, 20164, 20280, 20617, 20984, 21180, 21398, 21852, 22128, 22227, 22768, 23104, 23732, 24029, 25002]

r=[20, 25, 28, 3, 1, 32, 34, 8, 29, 23, 30, 38, 12, 31, 13, 10, 36, 24, 33, 16, 14, 39, 5, 15, 27, 19, 35, 11, 18, 26, 2, 17, 6, 4, 9, 22, 21, 7, 37];
dr={1: 7, 2: 16, 3: 8, 4: 15, 5: 9, 6: 7, 7: 15, 8: 8, 9: 10, 10: 16, 11: 9, 12: 6, 13: 16, 14: 15, 15: 16, 16: 15, 17: 15, 18: 13, 19: 13, 20: 15, 21: 9, 22: 15, 23: 16, 24: 11, 25: 15, 26: 16, 27: 15, 28: 8, 29: 6, 30: 14, 31: 6, 32: 13, 33: 16, 34: 8, 35: 12, 36: 13, 37: 5, 38: 15, 39: 5};
line = [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];
# dList={};
# 39垛的入库顺序

# 这应该是 39 * 5 个值
# 为各箱资产到达堆垛机时间
# 5箱为一垛
# 不满5箱 -> 直接算一垛
r=set()
for i in range(0,len(res)):
    if(res[i]['s1']==0 and res[i]['s2']==0):
        r.add(res[i]['num'])
        # r[res[i]['num']]=int(res[i]['type']);
        dr[res[i]['num']]=int(res[i]['line']);


# 输入: 乱序入库编码
# 输出: 每垛入库时间
r=set()
def cal(n=5):
    dList={};
    line = list(ans)
    global r
    global dr
    if(len(r)==0 or len(dr)==0):
        for i in range(0,len(res)):
            if(res[i]['s1']==0 and res[i]['s2']==0):
                r.add(res[i]['num'])
                # r[res[i]['num']]=int(res[i]['type']);
                dr[res[i]['num']]=int(res[i]['line']);
        # 检验箱之间安全间隔时间是否满足
    nn=n;
    for i in range(1,len(LisupLoadTimeLis)):
        diff=LisupLoadTimeLis[i]-LisupLoadTimeLis[i-1];
        tem = (i + 1) % nn;
        if(tem==0):
            if (diff < 4):
                LisupLoadTimeLis[i] = LisupLoadTimeLis[i - 1] + 4;
                continue;
        if(diff < 9):
            LisupLoadTimeLis[i]=LisupLoadTimeLis[i-1]+9;

    # 处理list
    List.reverse();
    List.append(List[-1]);
    # 在sort后获取line
    for i in range(0,len(line)):
        dList[line[i]]=List[i];
    
    
    res=[];
    le = len(LisupLoadTimeLis);
    rest = le % n;
    cnt = 0;
    for i in range(4,le,5):
        res.append(LisupLoadTimeLis[i]+dList[dr[r[cnt]]]);
        cnt+=1;

    return res;

print(cal(r));